# load did code
fldr <- "~/Dropbox/did/R/"
sapply(paste0(fldr,list.files(fldr)), source)
# remotes::install_github("bcallaway11/did", ref="pedro")
remotes::install_github("bcallaway11/DRDID")
remotes::install_github("bcallaway11/BMisc")

reset.sim <- function() {
  #-----------------------------------------------------------------------------
  # set parameters
  #-----------------------------------------------------------------------------
  # number of time periods
  time.periods <<- 4
  # number of treated units
  nt <<- 1000
  # coefficient on X 
  bett <<- seq(1:time.periods)
  # time fixed effect 
  thet <<- seq(1:time.periods)
  # number of untreated units
  nu <<- 1000
  # time fixed effect
  theu <<- thet # changing this creates violations of parallel trends
  # covariate effect
  betu <<- bett # changing this creates violations of conditional parallel trends
  #-----------------------------------------------------------------------------
  # parameters for treated potential outcomes
  #-----------------------------------------------------------------------------
  te.bet.ind <<- rep(1,time.periods) # no selective treatment timing
  te.bet.X <<- bett #no heterogeneous effects by X
  te.t <<- thet # no calendar time effects
  te.e <<- rep(0,time.periods) # no dynamic effects
  te <<- 0 # overall basic effect
}

reset.sim()

sim <- function(ret=NULL, bstrap=FALSE, cband=FALSE, control.group="nevertreated",
                panel=TRUE, xformla=~X) {
  #-----------------------------------------------------------------------------
  # build dataset
  # build things up from the generalized propensity score
  #-----------------------------------------------------------------------------

  X <- rnorm(n)
  gamG <- c(0,1:time.periods)
  pr <- exp(outer(X,gamG)) / apply( exp(outer(X,gamG)), 1, sum)
  GG <- apply(pr, 1, function(pvec) sample(seq(0,time.periods), size=1, prob=pvec))

  G <- GG[GG>0]
  nt <- length(G)
  Xt <- X[GG>0]

  # draw individual fixed effect
  Ct <- rnorm(nt, mean=G)

  # generate untreated potential outcomes in each time period
  Ynames <- paste0("Y",1:time.periods)
  Ynames <- paste0(1:time.periods)
  Y0tmat <- sapply(1:time.periods, function(t) {
    thet[t] + Ct + Xt*bett[t] + rnorm(nt)
  })
  Y0tdf <- as.data.frame(Y0tmat)
  
  # generate treated potential outcomes
  Y1tdf <- sapply(1:time.periods, function(t) {
    te.t[t] + te.bet.ind[G]*Ct + Xt*te.bet.X[t] + (G <= t)*te.e[sapply(1:nt, function(i) max(t-G[i]+1,1))] + te + rnorm(nt) # hack for the dynamic effects but ok
  })

  # generate observed data
  Ytdf <- sapply(1:time.periods, function(t) {
    (G<=t)*Y1tdf[,t] + (G>t)*Y0tdf[,t]
  })
  colnames(Ytdf) <- Ynames

  # store observed data for treated group
  dft <- cbind.data.frame(G,X=Xt,Ytdf)

  # untreated units
  nu <- n-nt
  
  # draw untreated covariate
  Xu <- X[GG==0]

  # draw untreated fixed effect
  Cu <- rnorm(nu)


  # generate untreated potential outcomes
  Y0umat <- sapply(1:time.periods, function(t) {
    theu[t] + Cu + rnorm(nu) + Xu*betu[t]
  })
  Y0udf <- as.data.frame(Y0umat)
  colnames(Y0udf) <- Ynames

  # store dataset of observed outcomes for untreated units
  dfu <- cbind.data.frame(G=0,X=Xu,Y0udf)

  # store overall dataset
  df <- rbind.data.frame(dft, dfu)

  # generate id variable
  df$id <- 1:nrow(df)

  # convert data from wide to long format
  library(tidyr)
  ddf <- gather(df, period, Y, -G, -X, -id)
  ddf$period <- as.numeric(ddf$period)
  ddf$treat <- 1*(ddf$G > 0)
  ddf <- ddf[order(ddf$id, ddf$period),] # reorder data

  ddf <- subset(ddf, G != 1)

  
  # get results
  res <- conditional_did_pretest(yname="Y", xformla=xformla, data=ddf,
                                 tname="period", idname="id",
                                 first.treat.name="G", estMethod="ipw",
                                 printdetails=FALSE,
                                 bstrap=bstrap, cband=cband,
                                 control.group=control.group,
                                 panel=panel, weightfun=indicator)

  ## res <- att_gt(yname="Y", xformla=xformla, data=ddf,
  ##                                tname="period", idname="id",
  ##                                first.treat.name="G", estMethod="reg",
  ##                                printdetails=FALSE,
  ##                                bstrap=bstrap, cband=cband,
  ##                                control.group=control.group,
  ##                                panel=panel)
  

  if (is.null(ret)) {
    return(res)
  } 

}


sim(xformla=~X)

#-----------------------------------------------------------------------------
# panel with no covariates
#-----------------------------------------------------------------------------
reset.sim()
te <- 0
time.periods <- 2
sim(xformla=~X)

biters <- 10
bout <- pbapply::pbsapply(1:biters, function(b) sim(xformla=~1)$CvMpval, cl=3)
mean( bout < .05 )
# expect to reject about 5% of the time

#-----------------------------------------------------------------------------
# panel with covariates
#-----------------------------------------------------------------------------


#-----------------------------------------------------------------------------
# repeated cross sections with no covariates
#-----------------------------------------------------------------------------
# TODO

#-----------------------------------------------------------------------------
# repeated cross sections with covariates
#-----------------------------------------------------------------------------
# TODO


#-----------------------------------------------------------------------------
# conditional pre-test
#-----------------------------------------------------------------------------
# still need to only consider some periods
